var myApp = angular.module('myApp', []);

//service style, probably the simplest one
myApp.service('helloWorldFromService', function() {
    this.sayHello = function() {
        return "Hello, World!";
    };
});

//factory style, more involved but more sophisticated
myApp.factory('helloWorldFromFactory', function() {

    return {
        sayHello: function() {
            return "Hello, World!";
        }
    };

});
    
//provider style, full blown, configurable version     
myApp.provider('helloWorld', function() {

   //this property can be be available at configuration time inside app.config.
    this.url = 'Development URL';

   //this method can be be available at configuration time inside app.config.
    this.setEnv = function(env) {
        this.env = env;
    };

    this.$get = function() {
        var url = this.url;
        var env = this.env;
        return {
            sayHello: function() {
                return "Hello, from " + env + "!";
            }
        }
    };


});


//hey, we can configure a provider!
//configuring the provider before $get is called to create the injectable           
myApp.config(function(helloWorldProvider){
    helloWorldProvider.setEnv('production');
    helloWorldProvider.url="production URL";
});
        

function MyCtrl($scope, helloWorld, helloWorldFromFactory, helloWorldFromService) {
    
    $scope.hellos = [
        helloWorld.sayHello(),
        helloWorldFromFactory.sayHello(),
        helloWorldFromService.sayHello()];
}